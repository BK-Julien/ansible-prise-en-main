---
- hosts: clusterk8s
  become: yes
  vars:
    update_cache: true
    upgrade_type: dist
    autoremove: true
    autoclean: true

  pre_tasks:
    - name: Vérifier la connectivité réseau
      ansible.builtin.ping:
      ignore_unreachable: false

  tasks:
    - name: Mise à jour du cache des paquets
      ansible.builtin.apt:
        update_cache: "{{ update_cache }}"
        cache_valid_time: 3600
      register: apt_update_result
      until: apt_update_result is success
      retries: 3
      delay: 5

    - name: Mise à niveau des paquets
      ansible.builtin.apt:
        upgrade: "{{ upgrade_type }}"
        autoremove: "{{ autoremove }}"
        autoclean: "{{ autoclean }}"
      register: upgrade_result
      notify: 
        - Handle Reboot

    - name: Vérifier les paquets nécessitant un redémarrage
      ansible.builtin.command: 
        cmd: needrestart -b
      register: needrestart_output
      changed_when: false
      failed_when: false

    - name: Afficher les services/paquets nécessitant un redémarrage
      ansible.builtin.debug:
        var: needrestart_output.stdout_lines
      when: needrestart_output.rc == 0

  handlers:
    - name: Handle Reboot
      block:
        - name: Vérifier si un redémarrage est nécessaire
          ansible.builtin.stat:
            path: /var/run/reboot-required
          register: reboot_required

        - name: Redémarrer le système si nécessaire
          ansible.builtin.reboot:
            msg: "Mise à jour système - Redémarrage automatique"
            connect_timeout: 60
            reboot_timeout: 300
            pre_reboot_delay: 0
            post_reboot_delay: 30
            test_command: uptime
          when: 
            - reboot_required.stat.exists
            - upgrade_result.changed

  post_tasks:
    - name: Vérifier la version du système
      ansible.builtin.command: 
        cmd: lsb_release -a
      register: system_version
      changed_when: false

    - name: Afficher la version du système
      ansible.builtin.debug:
        msg: "Version du système : {{ system_version.stdout_lines }}"

  vars_prompt:
    - name: confirm_update
      prompt: "Voulez-vous vraiment mettre à jour tous les systèmes ? (yes/no)"
      private: false

  pre_tasks:
    - name: Vérifier la confirmation
      ansible.builtin.fail:
        msg: "Mise à jour annulée par l'utilisateur"
      when: confirm_update != 'yes'
