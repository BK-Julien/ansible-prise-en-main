---
- hosts: clusterk8s
  become: yes
  vars:
    cni_version: "1.6.0"
    cni_download_url: "https://github.com/containernetworking/plugins/releases/download/v{{ cni_version }}/cni-plugins-linux-amd64-v{{ cni_version }}.tgz"
    cni_install_path: "/opt/cni/bin"

  tasks:
    - name: Créer le répertoire pour les plugins CNI
      ansible.builtin.file:
        path: "{{ cni_install_path }}"
        state: directory
        mode: '0755'

    - name: Créer un répertoire temporaire pour le téléchargement
      ansible.builtin.tempfile:
        state: directory
        prefix: cni_plugins
      register: download_dir

    - name: Télécharger les plugins CNI
      ansible.builtin.get_url:
        url: "{{ cni_download_url }}"
        dest: "{{ download_dir.path }}/cni-plugins.tgz"
        mode: '0644'

    - name: Extraire les plugins CNI
      ansible.builtin.unarchive:
        src: "{{ download_dir.path }}/cni-plugins.tgz"
        dest: "{{ cni_install_path }}"
        remote_src: yes

    - name: Vérifier les permissions des plugins CNI
      ansible.builtin.file:
        path: "{{ cni_install_path }}"
        state: directory
        recurse: yes
        mode: 'a+x'

    - name: Redémarrer Containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted

    - name: Nettoyer le répertoire temporaire
      ansible.builtin.file:
        path: "{{ download_dir.path }}"
        state: absent

    - name: Lister les plugins CNI installés
      ansible.builtin.command:
        cmd: ls -l "{{ cni_install_path }}"
      register: cni_plugins_list
      changed_when: false

    - name: Afficher les plugins CNI installés
      ansible.builtin.debug:
        var: cni_plugins_list.stdout_lines
